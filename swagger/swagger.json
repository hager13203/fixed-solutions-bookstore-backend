{
  "openapi": "3.0.0",
  "info": {
    "title": "Bookstore API",
    "version": "1.0.0",
    "description": "API documentation for Bookstore with role-based access (admin/user)."
  },
  "servers": [
    { "url": "http://localhost:3000", "description": "Local server" }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterUser" }
            }
          }
        },
        "responses": {
          "201": { "description": "User registered successfully" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginUser" }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful, returns JWT" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "Logout successful" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users (admin only)",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of users" },
          "403": { "description": "Forbidden" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID (admin or self)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "User details" },
          "403": { "description": "Forbidden" },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "summary": "Update user by ID (admin or self)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUser" }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "403": { "description": "Forbidden" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "summary": "Delete user by ID (admin only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "User deleted" },
          "403": { "description": "Forbidden" },
          "404": { "description": "User not found" }
        }
      }
    },
  "/books": {
    "get": {
      "summary": "Get all books",
      "responses": {
        "200": { "description": "List of books" }
      }
    }
  },
  "/books/add": {
    "post": {
      "summary": "Add new book (user/admin)",
      "security": [{ "bearerAuth": [] }],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Book" }
          }
        }
      },
      "responses": {
        "201": { "description": "Book added" },
        "401": { "description": "Unauthorized" }
      }
    }
  },
  "/books/{id}": {
    "get": {
      "summary": "Get book by ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": { "type": "string" }
        }
      ],
      "responses": {
        "200": { "description": "Book details" },
        "404": { "description": "Book not found" }
      }
    },
    "put": {
      "summary": "Update book (owner or admin)",
      "security": [{ "bearerAuth": [] }],
      "parameters": [
        { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": { "schema": { "$ref": "#/components/schemas/Book" } }
        }
      },
      "responses": {
        "200": { "description": "Book updated" },
        "403": { "description": "Forbidden" },
        "404": { "description": "Book not found" }
      }
    },
    "delete": {
      "summary": "Delete book (owner or admin)",
      "security": [{ "bearerAuth": [] }],
      "parameters": [
        { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
      ],
      "responses": {
        "200": { "description": "Book deleted" },
        "403": { "description": "Forbidden" },
        "404": { "description": "Book not found" }
      }
    }
  },
  "/books/{id}/buy": {
    "post": {
      "summary": "Buy a book (cannot buy own book)",
      "security": [{ "bearerAuth": [] }],
      "parameters": [
        { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
      ],
      "responses": {
        "200": { "description": "Book purchased successfully" },
        "400": { "description": "Cannot buy own book or out of stock" },
        "401": { "description": "Unauthorized" },
        "404": { "description": "Book not found" }
      }
    }
  }},

  "components": {
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "age": { "type": "integer" }
        }
      },
      "LoginUser": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "age": { "type": "integer" },
          "oldPassword": { "type": "string" },
          "newPassword": { "type": "string" }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "age": { "type": "integer" },
          "role": { "type": "string", "enum": ["user", "admin"] },
          "books_bought_amount": { "type": "integer" }
        }
      },
      "Book": {
        "type": "object",
        "required": ["title", "description", "amount"],
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "amount": { "type": "integer" },
          "createdBy": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
